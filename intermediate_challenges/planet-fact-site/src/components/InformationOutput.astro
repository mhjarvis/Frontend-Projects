---
import { Image } from "astro:assets"
import SourceImage from "/public/images/icon-source.svg"

const { data } = Astro.props
---

<aside class="information-container">
	<div class="information-container-desktop">
		<div class="information-content">
			<h1 class="planet-title">{data.name}</h1>
			<p class="planet-description">{data.overview.content}</p>

			<figcaption class="source-container">
				<div class="source-information-container">
					<span class="source-text">Source</span> : <span class="source-link">
						<a href={data.overview.source} class="source-link-a"> Wikipedia</a>
					</span>
					<Image src={SourceImage} class="chevron" alt="Cheveron icon" />
				</div>
			</figcaption>
		</div>

		<div class="information-container-mobile">
			<div class="selector-container-desktop active">
				<span class="selector-link-number">01</span>
				<h3 class="selector-link">OVERVIEW</h3>
			</div>
			<div class="selector-container-desktop">
				<span class="selector-link-number">02</span>
				<h3 class="selector-link">STRUCTURE</h3>
			</div>
			<div class="selector-container-desktop">
				<span class="selector-link-number">03</span>
				<h3 class="selector-link">SURFACE</h3>
			</div>
		</div>
	</div>
</aside>

<script define:vars={{ data }}>
	document.documentElement.style.setProperty("--test", data.color)

	const infoSelectors = document.querySelectorAll(".selector-container-desktop")
	const planet = document.getElementById("planet-image")
	const description = document.querySelector(".planet-description")
	const link = document.querySelector(".source-link")
	const selectorLink = document.querySelectorAll(".selector-link")

	infoSelectors.forEach((selector) => {
		selector.addEventListener("click", () => {
			const val = selector.children[1].innerHTML
			infoSelectors.forEach((e) => e.classList.remove("active"))
			selectorLink.forEach((e) => e.classList.remove("active"))
			selector.classList.add("active")
			updateContent(val)
		})
	})

	function updateContent(val) {
		if (val === "OVERVIEW") {
			planet.src = data.images.planet
			description.innerHTML = data.overview.content
			link.href = data.overview.source
		} else if (val === "STRUCTURE") {
			planet.src = data.images.internal
			description.innerHTML = data.structure.content
			link.href = data.structure.source
		} else if (val === "SURFACE") {
			planet.src = data.images.planet
			description.innerHTML = data.geology.content
			link.href = data.geology.source
		}
	}
</script>

<style>
	.information-container-mobile {
		display: none;
	}

	.information-content {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: space-between;
		height: 23.5rem;
		margin: 0 2.4rem;
	}

	.planet-title {
		font-size: 4rem;
		text-transform: uppercase;
	}

	.planet-description {
		font-family: "Spartan-Small";
		color: var(--color-white);
		font-size: 1.4rem;
		line-height: 2.2rem;
		text-align: center;
		padding: 1rem 1rem 2rem 1rem;
	}

	@media screen and (max-width: 768px) {
		.planet-description {
			width: 325px;
		}
	}

	.source-information-container {
		display: flex;
		align-items: center;
		justify-content: center;
		color: var(--color-lightGray);
		font-size: 1.7rem;
	}

	.source-text {
		font-family: "Spartan-Small";
		margin-right: 4px;
	}

	.source-link {
		font-family: "Spartan-Medium";
		margin-right: 0.4rem;
		margin-left: 4px;
	}

	.source-link-a {
		text-decoration: none;
		color: var(--color-lightGray);
		border-bottom: 1px solid var(--color-lightGray);
	}

	.normal-selector {
		display: none;
	}

	@media screen and (min-width: 768px) {
		.information-container-desktop {
			display: flex;
			transition: display 0.5s ease;
			visibility: visible;
			display: flex;
			flex-direction: row;
		}

		.information-container {
			max-width: 768px;
			width: 100%;
		}

		.information-content {
			display: flex;
			align-items: flex-start;
		}

		.information-content,
		.information-container-mobile {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			justify-content: center;
			margin: 3.9rem;
		}

		.planet-description {
			text-align: left;
			padding-left: 0;
			margin: 1rem 0;
		}

		.source-information-container {
			display: flex;
			flex-direction: row;
			align-items: center;
		}

		/*  ----------------------------------------------  */
		/*                 SECTION SELECTOR                 */
		/*  ----------------------------------------------  */

		.information-container-mobile {
			display: flex;
			color: white;
			min-width: 28rem;
			font-family: "Spartan-Small";
			letter-spacing: 2px;
		}

		.selector-container-desktop {
			display: flex;
			align-items: center;
			height: 4rem;
			width: 100%;
			border: 1px solid var(--color-darkGray);
			margin: 1rem 0;
			cursor: pointer;
		}

		.selector-link-number {
			margin-left: 2rem;
		}

		.selector-link {
			margin-left: 1rem;
		}

		.active {
			background-color: var(--test);
			border: none;
		}
	}

	@media screen and (min-width: 1024px) {
		.information-container-mobile {
			max-width: 32rem;
		}
		.information-container-desktop {
			display: flex;
			flex-direction: column;
			max-width: 32rem;
		}

		.information-container {
			display: flex;
			justify-content: flex-end;
		}

		.information-content {
			max-width: 32rem;
		}
	}

	@media screen and (min-width: 1440px) {
		.information-container {
			max-width: 35rem;
		}
	}
</style>
